stages:
  - build
  - quality
  - test

build_next:
  stage: build
  image: node
  before_script:
    - cd client/beatson-app
  script:
    - echo "building next..."
    - npm install
    - npm run build

build_flask_neo4j:
  stage: build
  image: python
  before_script: cd server
  script:
    - echo "building flask and neo4j..."
    - python -m venv /flask-neo4j-env
    - ls
    - source /flask-neo4j-env/bin/activate
    - pip install -r "requirements.txt"
  artifacts:
    untracked: false
    when: on_success
    expire_in: 30 days
    paths:
      - "/flask-neo4j-env"

quality_next_lint:
  stage: quality
  script:
    - echo "starting static analysis of next files"

quality_flask_neo4j_lint:
  stage: quality
  before_script:
    - mkdir server/linting-results
    - echo undefined > public/badges/$CI_JOB_NAME.score
    - pip install pylint-gitlab
  script:
    - pylint --exit-zero --output-format=text $(find -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > public/lint/index.html
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat server/linting-results/$CI_JOB_NAME.score)"
      # taken from https://pypi.org/project/pylint-gitlab/ documentation.

test_frontend:
  stage: test
  script:
    - echo "starting tests for frontend"

test_flask_neo4j:
  stage: test
  before_script:
    - cd server
  script:
    - echo "starting test for flask and neo4j"
    - source /flask-neo4j-env/bin/activate
    - python -m test.studyDaoTests
    - python -m test.sampleDaoTests
    - python -m test.sampleStudyDaoTests
    
test_flask_app:
  stage: test
  before_script:
    - cd server
    - source /flask-neo4j-env/bin/activate
  script:
    - echo "starting test for flask app"
     
before_script:
   - echo DB_PASSWORD is $DB_PASSWORD