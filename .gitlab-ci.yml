stages:
  - build
  - quality
  - test

build_next:
  stage: build
  image: node
  cache:
    paths:
      - /client/beatson-app/node_modules
  before_script:
    - cd client/beatson-app
  script:
    - echo "building next..."
    - npm install
    - npm run build

# build_flask_neo4j:
#   stage: build
#   image: python
#   before_script: cd server
#   script:
#     - echo "building flask and neo4j..."
#     - python -m venv /flask-neo4j-env
#     - ls
#     - source /flask-neo4j-env/bin/activate
#     - pip install -r "requirements.txt"
#   artifacts:
#     untracked: false
#     when: on_success
#     expire_in: 30 days
#     paths:
#       - "/flask-neo4j-env"

quality_next_lint:
  image: ruby:latest
  stage: quality
  script:
    - echo "starting static analysis of next files"

quality_flask_neo4j_lint:
  image: ruby:latest
  stage: quality
  script:
    - echo "starting static analysis of python files"

test_frontend:
  stage: test
  image: node
  cache:
    paths:
      - /client/beatson-app/node_modules
  before_script:
    - cd client/beatson-app
  script:
    - echo "starting tests for frontend"
    - npm install
    - npm test

test_flask_neo4j:
  stage: test
  image: python:latest
  services:
    - name: neo4j:latest
      alias: neo4j
      command: ["--auth", "neo4j/1234567"]

  before_script:
    - cd server
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - pip install .
  script:
    - echo "starting test for flask and neo4j"
    - python -m test.studyDaoTests
    - python -m test.experimentDaoTests
    - python -m test.sampleDaoTests

before_script:
    - echo DB_PASSWORD is $DB_PASSWORD